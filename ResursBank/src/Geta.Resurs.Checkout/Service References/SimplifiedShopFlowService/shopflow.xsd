<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:tns="http://ecommerce.resurs.com/v4/types/shopflow" xmlns:common="http://ecommerce.resurs.com/v4/types/common" xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://ecommerce.resurs.com/v4/types/shopflow" version="4.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import schemaLocation="https://ResursBankServiceClient.resurs.com/ecommerce-ResursBankServiceClient/ws/V4/SimplifiedShopFlowService?xsd=schemas/types/common.xsd" namespace="http://ecommerce.resurs.com/v4/types/common" />
  <xsd:complexType name="paymentMethod">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                Describes a way in which a purchase can be made. Typically, a representative will have two or more
                <a href="https://ResursBankServiceClient.resurs.com/docs/x/7AAF" xmlns="http://www.w3.org/1999/xhtml">payment methods.</a></xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="id" type="common:id">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The identity of the payment method.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="description" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        A textual description of the payment method. This is a help to the developer and should not be
                        shown
                        in the shop. That wording the merchant needs to figure out himself.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="legalInfoLinks" type="tns:webLink">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        A link to a pages at Resurs Bank displaying miscellaneous legal information, such as
                        annual-percentage-rate (APR) details etc.
                        <br xmlns="http://www.w3.org/1999/xhtml" /><strong>N.B.</strong>
                        The representative
                        <strong>must</strong>
                        display these links,
                        <strong>or</strong>
                        embed
                        the output from the
                        <code>ShopFlowService.getCostOfPurchaseHtml(...)</code>
                        method into their
                        shop. Irrespective of how the representative decides to implement it, the information
                        <strong>must</strong>
                        be available whenever a Resurs Bank payment method is presented.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="minLimit" type="common:positiveDecimal">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The minimum amount for which a limit application can be performed on this payment method.
                        If the payment amount is less than the this, the limit application will be performed on
                        the minimum amount.
                        <br /><strong>N.B.</strong>
                        This information<strong>must not</strong>be presented to the customer.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="maxLimit" type="common:positiveDecimal">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The maximum amount for which a limit application can be performed on this payment method.
                        If the payment amount is greater than this, the payment method may not be used.
                        <br /><strong>N.B.</strong> This information<strong>must not</strong>be presented to the customer.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="type" type="common:paymentMethodType">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        DEPRECATED! Use specificType instead.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="customerType" nillable="true" type="common:customerType">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The type of customer the PaymentMethodResponse is valid for.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="specificType" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        Of which type the payment method is. Can be used to group payment methods, and/or, apply some
                        other logic to them. Currently we return these types:
                        <ul><li>CARD</li><li>REVOLVING_CREDIT</li><li>PART_PAYMENT</li><li>INVOICE</li></ul></xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="webLink">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                Represents a link to be placed on a page.
                <br />
                Usage (if appendPriceLast is false):
                <code>&lt;a href="url"&gt;endUserDescription&lt;/a&gt; </code><br />
                If appendPriceLast is true, the page that is linked is expected to show some information based on a
                particular amount, such as the price of a given product, and the URL is to be completed by appending
                the price of that product to the url.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="appendPriceLast" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        Whether or not the URL needs to be suffixed by an amount.
                        <br /><strong>N.B.</strong>
                        Please note that the amount is an integer!
                        <br />
                        The web link URL "http://site.com/cgi?param1=1&amp;price=" and an amount of SEK 999.90
                        would give the complete URL "http://site.com/cgi?param1=1&amp;price=1000".
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="endUserDescription" type="common:nonEmptyString">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">The link description. (&lt;a href="url"&gt;endUserDescription&lt;/a&gt;)
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="url" type="common:nonEmptyString">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The
                        <strong>possibly incomplete</strong>
                        URL to link to.<br />See appendPriceLast
                        for more details!
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="annuityFactor">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                The annuity factor is a value that when multiplied with an amount will show the monthly
                installment cost, thus making the product appear more affordable to the customer.
                <p>For example:</p><ul><li>factor = 0.083333</li><li>paymentPlanName = 12 months interest free</li><li>productPrice = 10000 SEK</li></ul>
                This means that the installment plan for this payment using the specified payment method
                is
                <i>"833 SEK a month, 12 months interest free!"</i><br /><strong>NB:</strong>Please be aware that whenever this kind of information is presented,
                it<strong>must</strong>be accompanied by the terms of the credit. See
                <tt class="method">PaymentMethodResponsesInfoWebService.getLegalInformation</tt>
                and
                <tt class="data">PaymentMethodResponse#legalInfoLinks</tt>
                for more information.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="factor" type="common:positiveDecimal">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The annuity factor, i.e. the number to be multiplied with the payment amount to get
                        the monthly installment. This number can be larger than 1! (1 month payment plan with
                        administrative fees
                        is such an example)
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="duration" type="xsd:positiveInteger">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The duration of the installment period in months.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="paymentPlanName" type="common:nonEmptyString">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The full name of the payment plan. This should be shown after the calculated monthly
                        installment.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="paymentSession">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">The detailed information about the payment
                session.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="id" type="common:id">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The identity of the payment session.<br />If one was specified by the representative,
                        it will be used, otherwise it will be generated.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="expirationTime" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        When the payment session expires.<br />Sessions will be automatically pruned after the
                        expiration time, and if the payment is still valid, a new session must be created.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="limitApplicationFormAsObjectGraph" type="tns:limitApplicationFormAsObjectGraph">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The limit application form as a graph of object. This is for use by representatives that
                        want to generate the form themselves.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="limitApplicationFormAsCompiledForm" type="tns:limitApplicationFormAsCompiledForm">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The limit application form as compiled HTML. This is for use by representatives that want
                        to use the form created by Resurs Bank.
                        <br /><strong>NB:</strong>If no form action was supplied, this will be empty.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="bookingResult">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                The result of the payment booking attempt.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="paymentId" type="common:id">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The identity of the payment.
                        <br /><strong>NB:</strong>This is<strong>not</strong>the same as the payment session identity.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="fraudControlStatus" type="tns:fraudControlStatus">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The result of the fraud control. This is only available if the fraud control was made
                        synchronously.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="limitApplicationFormAsCompiledForm">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                A complete limit application form in HTML format for embedding in web shop page. Upon submission,
                the form itself will generate the application data to be submitted to Resurs Bank.
                <br />
                The form contains HTML elements and Javascript based validation will be performed when the form is
                submitted.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="form" type="common:nonEmptyString">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The main form content. It should be placed somewhere in the HTML BODY element of the page.
                        <br /><strong>NB:</strong>The form contents are URL encoded and must be decoded before insertion
                        into the page.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="formHeader" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The form header data. It should be placed as a child of the HTML HEAD element of the page.
                        <br /><strong>NB:</strong>The form header is URL encoded and must be decoded before insertion
                        into the page.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="formOnLoad" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        A JavaScript function call that needs to be performed once the page has been fully rendered.
                        This is done by placing it as an on-load event of the HTML BODY element of the page.
                        <br /><strong>NB:</strong>The form on-load event is URL encoded and must be decoded before
                        insertion into the page.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="limitApplicationFormAsObjectGraph">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                The limit application form as an object graph. All elements to be present on the form
                are returned and need to be rendered accordingly.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="formId" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The identity of the form.
                        <br />
                        If a form has been previously filled in by the customer, and for some reason new
                        application attempt has to be made without any change to the parameters, comparing
                        this to the identity previous form will show if the new form needs to be presented,
                        or the same data can be re-submitted.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="formElement" type="tns:formElement">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The list of form elements.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="formElement">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                The detailed specification of the form element.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="label" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The form element label.<br />Typically, this is displayed as the field header.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="description" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        A textual description of the form element.<br />Typically, this is displayed
                        when the user hovers the mouse over the element.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="format" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The form element format as a regular expression.<br />When submitted, the
                        form element will be validated against this, and it may be a good idea to
                        use this to validate the value the element already on the client side.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="format-message" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The message to be presented when the format validation fails.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="default-value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The default value.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="option" type="tns:option">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        If the form element has a predefined set of possible values, these
                        are present as a list.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    The type of form element.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    The name of the form element.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="mandatory" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    Whether or not the form element is mandatory.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="length" type="xsd:int" use="optional">
      <xsd:annotation>
        <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    The maximum input length.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="min" type="xsd:int" use="optional">
      <xsd:annotation>
        <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    If a numerical element, the minimum value.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="max" type="xsd:int" use="optional">
      <xsd:annotation>
        <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    If a numerical element, the maximum value.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="unit" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    The unit to be presented after the element.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="level" type="xsd:unsignedByte" use="optional">
      <xsd:annotation>
        <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    If a header element, the level of header.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="option">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                An option in a list of predefined values.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="label" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The list option label.<br />Typically, this is displayed as the option name.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The list option value.<br />Typically, this not shown to the customer.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="description" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        A textual description of the list option.<br />Typically, this is displayed
                        when the user hovers the mouse over the option.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="checked" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    Whether or not this option is prechecked.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:simpleType name="fraudControlStatus">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                The status of the payment fraud control.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FROZEN">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The payment is currently frozen. This typically means that there is something that
                        needs further investigation before the payment can be finalized.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NOT_FROZEN">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The payment is not frozen, and may be finalized at any time.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="CONTROL_IN_PROGRESS">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The fraud control is still in progress. Please wait for it to complete.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="customerIdentification">
    <xsd:sequence>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="token" type="tns:identificationToken">
          <xsd:annotation>
            <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                            The identification token created by the <pre>identifyCustomer</pre> function. If the token
                            isn't valid a fault will be returned.
                            <p />
                            * Either set identificationToken, or customerAccount. Both should not be set.
                        </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="customerAccount" type="tns:customerCard">
          <xsd:annotation>
            <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                            Information used to identify the customer, in order to be able to retrieve its bonus.
                            <p />
                            * Either set identificationToken, or customerAccount. Both should not be set.
                        </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="bonus">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                A holder for all bonus the customer currently have.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="points" type="xsd:nonNegativeInteger">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The number of points the customer have.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="customerIdentificationResponse">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                A token that can be used to identify a customer against Resurs Bank.
                <p />You may associate and save this token (and its expire date) with an customer account in the web
                shop, <i>as long as</i> the customer actually have to log in to access it's account. It's up to
                you to secure that log in, so that no other person or organisation indirectly or directly can use this
                token.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="token" type="tns:identificationToken">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        A string used to identify a customer. Alphanumerical characters, 100 characters long.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="expirationDate" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        When this token expires. It cannot be used after that date. This date should <i>at least</i>
                        be a couple of years in the future.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="customerCard">
    <xsd:sequence>
      <xsd:element name="governmentId" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The government identity of the customer for which to retrieve bonus points.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="customerType" type="common:customerType">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        The type of customer to retrieve. <br />In many cases, this is easily determined from the
                        government identity, but for Swedish companies in sole proprietorship, the same identity is
                        used for both the person as a natural customer, and the company as a legal customer.
                        <p />
                        If this value is omitted we will try to parse the government id as a natural first and secondly
                        as a legal entity.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cardNumber" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                        An card number tied to the supplied government id <i>in Resurs Bank</i>. We cannot identify
                        customers with cards not present in our own database!
                        <p />In certain cases only the four last digits are needed. The API documentation of functions
                        with this lesser requirement will point that out.
                    </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="identificationToken">
    <xsd:annotation>
      <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                A string used to identify a customer.
                <p />
                Created by the <pre>identifyCustomer</pre> function.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Za-z0-9]{100}" />
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>